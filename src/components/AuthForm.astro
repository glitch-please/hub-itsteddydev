---
import Input from "./Input.astro";
import InputWrap from "./InputWrap.astro";
---

<div
  class="mx-auto mt-12 min-w-80 max-w-lg rounded-lg bg-white p-8 shadow-lg dark:bg-hub-background-dark md:min-w-96 md:max-w-xl lg:min-w-[32rem] lg:max-w-2xl xl:min-w-[40rem] xl:max-w-3xl"
>
  <form id="auth-form" class="flex flex-col gap-4">
    <InputWrap>
      <Input name="email" type="email" placeholder="Email" required />
    </InputWrap>

    <InputWrap>
      <Input name="password" type="password" placeholder="Password" required />
    </InputWrap>

    <!-- <input
      name="password"
      type="password"
      placeholder="Password"
      required
      class="input input-bordered w-full rounded border border-gray-300 bg-gray-50 px-4 py-2 focus:outline-none focus:ring-2 focus:ring-sky-500 dark:border-gray-700 dark:bg-gray-800"
    /> -->
    <button
      id="auth-submit"
      type="submit"
      class="btn w-full rounded bg-sky-500 py-2 font-semibold text-white transition hover:bg-sky-600"
    >
      Sign In
    </button>
  </form>
  <button
    id="google-btn"
    class="btn mt-4 flex w-full items-center justify-center gap-2 rounded border border-gray-300 bg-white py-2 font-semibold text-gray-700 transition hover:bg-gray-100 dark:border-gray-700 dark:bg-gray-900 dark:text-gray-200 dark:hover:bg-gray-800"
  >
    <i class="bx bxl-google bx-sm"></i>
    Sign in with Google
  </button>
  <div class="mt-4 text-center">
    <button
      id="toggle-view"
      class="bg-transparent text-sky-600 hover:underline"
    >
      Don't have an account? Sign up
    </button>
  </div>
  <p id="auth-error" class="mt-4 text-center text-red-600" style="display:none">
  </p>
</div>

<script type="module">
  import { createClient } from "https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2/+esm";

  document.addEventListener("DOMContentLoaded", () => {
    const supabaseUrl = "https://qudlxlryegnainztkrtk.supabase.co";
    const supabaseAnonKey =
      "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InF1ZGx4bHJ5ZWduYWluenRrcnRrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTI2MzUwMTMsImV4cCI6MjA2ODIxMTAxM30.pAWMWGUCK48Lujssi3Ip4GUm11TZDmaNCINqX3q2m5o";

    const supabase = createClient(supabaseUrl, supabaseAnonKey);

    let view = "sign_in";
    let loading = false;

    const form = document.getElementById("auth-form");
    const submitBtn = document.getElementById("auth-submit");
    const errorP = document.getElementById("auth-error");
    const toggleBtn = document.getElementById("toggle-view");
    const googleBtn = document.getElementById("google-btn");

    function setLoading(state) {
      loading = state;
      submitBtn.disabled = loading;
      googleBtn.disabled = loading;
      submitBtn.textContent = loading
        ? "Loading..."
        : view === "sign_in"
          ? "Sign In"
          : "Sign Up";
      googleBtn.textContent = loading ? "Loading..." : "Sign in with Google";
    }

    function setError(msg) {
      if (msg) {
        errorP.textContent = msg;
        errorP.style.display = "";
      } else {
        errorP.textContent = "";
        errorP.style.display = "none";
      }
    }

    form.addEventListener("submit", async (e) => {
      e.preventDefault();
      setLoading(true);
      setError("");
      const email = form.email.value;
      const password = form.password.value;
      let result;
      if (view === "sign_in") {
        result = await supabase.auth.signInWithPassword({
          email,
          password,
        });
      } else {
        result = await supabase.auth.signUp({ email, password });
      }
      setLoading(false);
      if (result.error) {
        setError(result.error.message);
      } else {
        window.location.href = "/";
      }
    });

    googleBtn.addEventListener("click", async () => {
      setLoading(true);
      setError("");
      const { error: gError } = await supabase.auth.signInWithOAuth({
        provider: "google",
      });
      setLoading(false);
      if (gError) setError(gError.message);
    });

    toggleBtn.addEventListener("click", () => {
      view = view === "sign_in" ? "sign_up" : "sign_in";
      // title.textContent = view === "sign_in" ? "Sign In" : "Create Account";
      submitBtn.textContent = view === "sign_in" ? "Sign In" : "Sign Up";
      toggleBtn.textContent =
        view === "sign_in"
          ? "Don't have an account? Sign up"
          : "Already have an account? Sign in";
      setError("");
    });
  });
</script>
